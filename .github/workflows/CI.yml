name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

jobs:
  build:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v6
    
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: add git credentials
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Restore dependencies
      run: dotnet restore EldExchange.WebApi.sln
    - name: Build
      run: dotnet build EldExchange.WebApi.sln --no-restore
    - name: Test
      run: dotnet test EldExchange.WebApi.sln --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=lcov

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: test-results
        path: EldExchange.UniTest/TestResults/*.trx

    - name: Add dotnet tool
      run: dotnet tool install --global Versionize

    - name: Versionize main
      if: steps.branch-name.outputs.current_branch  == 'main'
      run: versionize --aggregate-pre-releases --changelog-all

    - name: Versionize develop
      if: steps.branch-name.outputs.current_branch  == 'develop'
      run: versionize --pre-release alpha

    - name: get-version
      id: get-version
      run: echo "version=$(versionize inspect)" >> $GITHUB_OUTPUT

    - name: git push changelog main
      if: steps.branch-name.outputs.current_branch  == 'main'
      run: git push --follow-tags origin main

    - name: git push changelog develop
      if: steps.branch-name.outputs.current_branch  == 'develop'
      run: git push --follow-tags origin develop

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Api Image main
        uses: docker/build-push-action@v3
        if: steps.branch-name.outputs.current_branch  == 'main'
        with:
          context: .
          file: ./EldExchange/Dockerfile
          push: true
          tags: flpinheiro/eldexchange:latest,flpinheiro/eldexchange:${{needs.build.outputs.version}}

      - name: Build and push Api Image develop
        uses: docker/build-push-action@v3
        if: steps.branch-name.outputs.current_branch  == 'develop'
        with:
          context: .
          file: ./EldExchange/Dockerfile
          push: true
          tags: flpinheiro/eldexchange:${{needs.build.outputs.version}}
